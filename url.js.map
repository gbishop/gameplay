{"version":3,"file":"url.js","sources":["../url.js"],"sourcesContent":["/* Encode and Decode games from URLs */\n\nconst site = \"http://localhost:8080\";\n\n/** @type {Game} */\nexport const example = {\n  title: \"Stopwatch - Count Up Timer (1 Hour)\",\n  video: \"FaWIn_wjo6w\",\n  start: 0.0,\n  timePoints: [\n    {\n      time: 1,\n      choices: [\n        {\n          prompt: \"p 1\",\n          next: 0,\n        },\n        {\n          prompt: \"start over\",\n          next: -1,\n        },\n        {\n          prompt: \"quit\",\n          next: -2,\n        },\n      ],\n    },\n    {\n      time: 3,\n      choices: [\n        {\n          prompt: \"p 3\",\n          next: 0,\n        },\n        {\n          prompt: \"p 2\",\n          next: 2,\n        },\n        {\n          prompt: \"start over\",\n          next: -1,\n        },\n        {\n          prompt: \"quit\",\n          next: -2,\n        },\n      ],\n    },\n    {\n      time: 7,\n      choices: [\n        {\n          prompt: \"p 7\",\n          next: 0,\n        },\n        {\n          prompt: \"start over\",\n          next: -1,\n        },\n        {\n          prompt: \"jump to end\",\n          next: 3590,\n        },\n      ],\n    },\n  ],\n};\n\n/** @param {string} key\n * @param {number} value\n */\nfunction signed(key, value) {\n  if (value < 0) {\n    key = key.toUpperCase();\n    value = -value;\n  }\n  return `${key}${value}`;\n}\n\n/**\n * @param {Game} game\n * @returns {URL}\n **/\nexport function encode(game) {\n  const url = new URL(site);\n  url.searchParams.append(\"t\", game.title);\n  url.searchParams.append(\"v\", game.video);\n  let t0 = Math.round(game.start * 10);\n  url.searchParams.append(\"s\", t0.toString());\n  const g = [];\n  const prompts = {};\n  for (const tp of game.timePoints) {\n    const time = Math.round(tp.time * 10);\n    g.push(`t${time - t0}`);\n    for (const choice of tp.choices) {\n      const p = choice.prompt.trim();\n      if (!(p in prompts)) {\n        prompts[p] = Object.keys(prompts).length;\n      }\n      let next = choice.next;\n      let key = { [0]: \"c\", [-1]: \"b\", [-2]: \"q\" }[next] || \"p\";\n      g.push(`${key}${prompts[p]}`);\n      if (key == \"p\") {\n        next = Math.round(10 * next - t0);\n        g.push(signed(\"n\", next));\n      }\n      t0 = time;\n    }\n  }\n  url.searchParams.append(\"g\", g.join(\"\"));\n  for (const prompt in prompts) {\n    url.searchParams.append(\"d\", prompt);\n  }\n  return url;\n}\n\n/**\n * Decode a URL into a game\n * @param {URL} url\n * @returns {Game}\n */\nexport function decode(url) {\n  const sp = url.searchParams;\n  /**\n   * Return value of a parameter or default\n   * @template {string | number} T\n   * @param {string} key\n   * @param {T} def\n   * @returns {T}\n   */\n  function P(key, def) {\n    const result = sp.get(key);\n    if (!result) {\n      return def;\n    }\n    if (typeof def === \"string\") {\n      return /** @type {T} */ (result);\n    } else if (typeof def === \"number\") {\n      return /** @type {T} */ (parseInt(result));\n    }\n    return def;\n  }\n\n  let t0 = P(\"s\", 0) / 10;\n  /** @type {Game} */\n  const game = {\n    title: P(\"t\", \"untitled\"),\n    video: P(\"v\", \"\"),\n    start: t0,\n    timePoints: [],\n  };\n  const prompts = [];\n  for (const [key, value] of sp) {\n    if (key == \"d\") {\n      prompts.push(value);\n    }\n  }\n  const interval = P(\"i\", 0) / 10;\n  const end = P(\"e\", 0) / 10;\n  const prompt = P(\"p\", \"\");\n  if (interval && end && prompt) {\n    for (let t = t0 + interval; t <= end; t += interval) {\n      game.timePoints.push({\n        time: t,\n        choices: [{ prompt, next: 0 }],\n      });\n    }\n  } else {\n    let pat = /[tT](?<time>\\d+)(?<choices>(?:[cbqpnN]\\d+)+)/g;\n    let cpat = /(?<key>[cbqp])(?<prompt>\\d+)(?:(?<sign>[nN])(?<next>\\d+))?/g;\n    for (const match of P(\"g\", \"\").matchAll(pat)) {\n      const groups = match.groups;\n      if (!groups) continue;\n      t0 += parseInt(groups.time) / 10;\n      /** @type {TimePoint} tp */\n      const tp = {\n        time: t0,\n        choices: [],\n      };\n      for (const cmatch of groups.choices.matchAll(cpat)) {\n        const groups = cmatch.groups;\n        if (!groups) continue;\n        const choice = {\n          prompt: prompts[+groups.prompt],\n          next: 0,\n        };\n        const key = groups.key;\n        if (key == \"b\") {\n          choice.next = -1;\n        } else if (key == \"q\") {\n          choice.next = -2;\n        } else if (key == \"p\") {\n          choice.next =\n            (parseInt(groups.next) / 10) * { n: 1, N: -1 }[groups.sign] + t0;\n        }\n        tp.choices.push(choice);\n      }\n      game.timePoints.push(tp);\n    }\n  }\n  return game;\n}\n\n/**\n * Compare objects for equality\n * @param {number | string | Object} a\n * @param {number | string | Object} b\n * returns {boolean}\n */\nfunction equal(a, b) {\n  if (a == b) {\n    return true;\n  }\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length == b.length) {\n      return a.every((v, i) => equal(v, b[i]));\n    }\n    return false;\n  }\n  if (typeof a == \"object\" && typeof b == \"object\") {\n    const ka = Object.keys(a).sort();\n    const kb = Object.keys(b).sort();\n    return equal(ka, kb) && ka.every((k) => equal(a[k], b[k]));\n  }\n\n  return false;\n}\n\nconst test = false;\nif (test) {\n  let u = encode(example);\n  let s = u.search;\n  if (s != window.location.search) window.location.search = s;\n  let u2 = new URL(window.location.href);\n  const result = decode(u2);\n  console.log(\"equal\", equal(example, result));\n}\n"],"names":[],"mappings":"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"}